package pete.android.study.ui.activities;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import pete.android.study.R;
import pete.android.study.adapters.PermisionsAdapter;
import pete.android.study.ui.fragments.AnalysisFragment;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.ExpandableListView;
import android.widget.TextView;

public class AnalysisDetailActivity extends Activity {
    
	public static final String APP_INFO = "app_info";
	
	private String[] green_perm;
	private String[] yellow_perm;
	private String[] orange_perm;
	private String[] red_perm;
	private String[] permissions;	

    List<String> listDataHeader;
    HashMap<String, List<String>> listDataChild;
	
	@Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        //set layout for the main screen
        setContentView(R.layout.analysis_detail);    
		
		// arguments
        Intent intent = getIntent();
        
        float score = intent.getFloatExtra("riskScore", -1.0f);
        int scoreLvl = (int)(score / 20) + 1;
        int btnId = intent.getIntExtra("clickedBtnId", -1);
		permissions = intent.getStringArrayExtra(AnalysisFragment.PERM);
        TextView txt = (TextView)findViewById(R.id.textView111);
        
        // permissions by color from xml files
        green_perm = getApplicationContext().getResources().getStringArray(R.array.green_permissions);
     	yellow_perm = getApplicationContext().getResources().getStringArray(R.array.yellow_permissions);
     	orange_perm = getApplicationContext().getResources().getStringArray(R.array.orange_permissions);
     	red_perm = getApplicationContext().getResources().getStringArray(R.array.red_permissions);
        
        switch(btnId)
        {
	        case R.id.btnThreadLvl1:
	        	SetAppropiateContent(scoreLvl, 1, getApplicationContext());
	        	break;
	        case R.id.btnThreadLvl2:
	        	SetAppropiateContent(scoreLvl, 2, getApplicationContext());
	        	break;
	        case R.id.btnThreadLvl3:
	        	SetAppropiateContent(scoreLvl, 3, getApplicationContext());
	        	break;
	        case R.id.btnThreadLvl4:
	        	SetAppropiateContent(scoreLvl, 4, getApplicationContext());
	        	break;
	        case R.id.btnThreadLvl5:
	        	SetAppropiateContent(scoreLvl, 5, getApplicationContext());
	        	break;
	    	default:
	    		txt.setText("An error occured");
	    		break;
        }        
    }
	
	private void SetAppropiateContent(int scoreLvl, int btnLvl, Context context)
	{
		TextView txt = (TextView)findViewById(R.id.textView111);
				
		if(scoreLvl == btnLvl)
		{
			txt.setText("LVL" + btnLvl + " thread descritption\n\nList of presmissions:");
			
			green_perm = context.getResources().getStringArray(R.array.green_permissions);
			yellow_perm = context.getResources().getStringArray(R.array.yellow_permissions);
			orange_perm = context.getResources().getStringArray(R.array.orange_permissions);
			red_perm = context.getResources().getStringArray(R.array.red_permissions);

			PermisionsAdapter adapter = new PermisionsAdapter(context,
					permissions,
					green_perm,
					yellow_perm,
					orange_perm,
					red_perm);

			ExpandableListView mListPermisions = (ExpandableListView)findViewById(R.id.list_permisions);
			mListPermisions.setVisibility(View.VISIBLE);
			mListPermisions.setAdapter(adapter);
		}
		else
		{
			txt.setText("LVL" + btnLvl + " thread descritption\n");
		}
	}
	
	private void prepareListData() {
        listDataHeader = new ArrayList<String>();
        listDataChild = new HashMap<String, List<String>>();
 
        // Adding child data
        listDataHeader.add("Top 250");
        listDataHeader.add("Now Showing");
        listDataHeader.add("Coming Soon..");
 
        // Adding child data
        List<String> top250 = new ArrayList<String>();
        top250.add("The Shawshank Redemption");
        top250.add("The Godfather");
        top250.add("The Godfather: Part II");
        top250.add("Pulp Fiction");
        top250.add("The Good, the Bad and the Ugly");
        top250.add("The Dark Knight");
        top250.add("12 Angry Men");
 
        List<String> nowShowing = new ArrayList<String>();
        nowShowing.add("The Conjuring");
        nowShowing.add("Despicable Me 2");
        nowShowing.add("Turbo");
        nowShowing.add("Grown Ups 2");
        nowShowing.add("Red 2");
        nowShowing.add("The Wolverine");
 
        List<String> comingSoon = new ArrayList<String>();
        comingSoon.add("2 Guns");
        comingSoon.add("The Smurfs 2");
        comingSoon.add("The Spectacular Now");
        comingSoon.add("The Canyons");
        comingSoon.add("Europa Report");
 
        listDataChild.put(listDataHeader.get(0), top250); // Header, Child data
        listDataChild.put(listDataHeader.get(1), nowShowing);
        listDataChild.put(listDataHeader.get(2), comingSoon);
    }
}

